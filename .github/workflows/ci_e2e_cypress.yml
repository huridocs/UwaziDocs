name: e2e cypress

on:
  push:
    branches:
      - production
      - development
      - staging
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-cypress:
    runs-on: ubuntu-20.04
    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6-amd64
        ports:
          - 9200/tcp
        options: -e="discovery.type=single-node" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10
      mongodb:
        image: mongo:4.2.6
        ports:
          - 27017/tcp
    steps:
      - name: Checkout reposistory
        uses: actions/checkout@v3
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: install dependencies
        run: yarn install
      # from here
      - run: sudo apt-get install gnupg
      - run: wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
      - run: echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
      # to here
      - run: sudo apt update
      - run: sudo apt-get install poppler-utils
      # from here
      - run: sudo apt-get install -y mongodb-mongosh
      - run: 'mongosh -host localhost:${{ job.services.mongodb.ports[27017] }} uwazi_development --eval ''db.settings.update({},{$set : {"features":{"metadata-extraction": true,"metadataExtraction" :{"url":"http://localhost:5052"}, "segmentation":{"url":"http://localhost:5051/async_extraction"}}}},{upsert:false,multi:true})'''
      # to here
      - run: git clone git@github.com:huridocs/dummy_extractor_services.git
      - run: cd dummy_extractor_services && make run &
      - run: cd ..
      - name: Cache build
        id: cache-build
        uses: actions/cache@v2
        with:
          path: ./prod
          key: >-
            ${{ runner.os }}-build-${{ hashFiles('app/**/*.*') }}-
            ${{ hashFiles('database/**/*.*') }}-
            ${{ hashFiles('**/yarn.lock') }}-
            ${{ hashFiles('**/webpack.production.config.js') }}-
            ${{ hashFiles('**/.babelrc') }}-
            ${{ hashFiles('webpack/**/config.js') }}-
      - name: build production
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: yarn production-build
      - run: yarn e2e-puppeteer-fixtures
        env:
          DBHOST: localhost:${{ job.services.mongodb.ports[27017] }}
          ELASTICSEARCH_URL: http://localhost:${{ job.services.elasticsearch.ports[9200] }}
          DATABASE_NAME: uwazi_e2e
          INDEX_NAME: uwazi_e2e
          TRANSPILED: true
      - name: start Uwazi
        env:
          DBHOST: localhost:${{ job.services.mongodb.ports[27017] }}
          ELASTICSEARCH_URL: http://localhost:${{ job.services.elasticsearch.ports[9200] }}
          DATABASE_NAME: uwazi_e2e
          INDEX_NAME: uwazi_e2e
        run: yarn run-production &
      - name: wait for uwazi to be ready
        run: sleep 5 && wget --waitretry=5 --retry-connrefused -v http://localhost:3000/
        timeout-minutes: 2
      - run: xvfb-run -a yarn e2e-puppeteer-all --roots '<rootDir>/${{ matrix.suite-dir }}'
        timeout-minutes: 25
        env:
          DBHOST: localhost:${{ job.services.mongodb.ports[27017] }}
          ELASTICSEARCH_URL: http://localhost:${{ job.services.elasticsearch.ports[9200] }}
          TRANSPILED: true
