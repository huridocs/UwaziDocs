// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Metadata should not render an empty list 1`] = `<React.Fragment />`;

exports[`Metadata should not render metadata without value 1`] = `
<React.Fragment>
  <dl
    key="Label"
  >
    <dt>
      Label
    </dt>
    <dd
      className=""
    >
      string value
    </dd>
  </dl>
</React.Fragment>
`;

exports[`Metadata should render a Markdown when the metadata is type mardown 1`] = `
<React.Fragment>
  <dl
    key="label array"
  >
    <dt>
      label array
    </dt>
    <dd
      className=""
    >
      <MarkdownViewer
        html={false}
        lists={Array []}
        markdown="some markdown text"
      />
    </dd>
  </dl>
</React.Fragment>
`;

exports[`Metadata should render array values separated by ", " 1`] = `
<React.Fragment>
  <dl
    key="label array"
  >
    <dt>
      label array
    </dt>
    <dd
      className=""
    >
      <ValueList
        compact={false}
        property={
          Object {
            "label": "label array",
            "value": Array [
              Object {
                "value": "first_value",
              },
              Object {
                "value": "second_value",
              },
            ],
          }
        }
      />
    </dd>
  </dl>
</React.Fragment>
`;

exports[`Metadata should render links when multiple properties have url 1`] = `
<React.Fragment>
  <dl
    key="label array"
  >
    <dt>
      label array
    </dt>
    <dd
      className=""
    >
      <ValueList
        compact={false}
        property={
          Object {
            "label": "label array",
            "value": Array [
              Object {
                "url": "url1",
                "value": "first_value",
              },
              Object {
                "url": "url2",
                "value": "second_value",
              },
            ],
          }
        }
      />
    </dd>
  </dl>
</React.Fragment>
`;

exports[`Metadata should render links when the property has url 1`] = `
<React.Fragment>
  <dl
    key="withUrl"
  >
    <dt>
      withUrl
    </dt>
    <dd
      className=""
    >
      <Connect(I18NLink)
        to="url"
      >
        string value
      </Connect(I18NLink)>
    </dd>
  </dl>
</React.Fragment>
`;

exports[`Metadata should render property not have this item when type is null 1`] = `
<React.Fragment>
  <dl
    key="metadata without property"
  >
    <dt>
      metadata without property
    </dt>
    <dd
      className=""
    >
      No property
    </dd>
  </dl>
</React.Fragment>
`;

exports[`Metadata should render sorted property with sorted styles 1`] = `
<React.Fragment>
  <dl
    key="sortedBy"
  >
    <dt>
      sortedBy
    </dt>
    <dd
      className="item-current-sort"
    >
      string value
    </dd>
  </dl>
</React.Fragment>
`;

exports[`Metadata should render string values 1`] = `
<React.Fragment>
  <dl
    key="Label"
  >
    <dt>
      Label
    </dt>
    <dd
      className=""
    >
      string value
    </dd>
  </dl>
</React.Fragment>
`;

exports[`Metadata when passing compact prop should pass it to ValueList 1`] = `
<React.Fragment>
  <dl
    key="label array"
  >
    <dt>
      label array
    </dt>
    <dd
      className=""
    >
      <ValueList
        compact={true}
        property={
          Object {
            "label": "label array",
            "value": Array [
              Object {
                "url": "url1",
                "value": "first_value",
              },
              Object {
                "url": "url2",
                "value": "second_value",
              },
            ],
          }
        }
      />
    </dd>
  </dl>
</React.Fragment>
`;
